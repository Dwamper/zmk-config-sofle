/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&caps_word { continue-list = <UNDERSCORE MINUS>; };

&led_strip { chain-length = <35>; };

&left_encoder { resolution = <2>; };

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 54 55 56 57>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 58 59 8 50 51 52 53 54>;
        };

        tapmod: tapmod {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPMOD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BKSPC |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |  DEL  |
            // |  CAPS |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   ' " |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,<   |  .>  |   /?  | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp EQUAL   &kp N1           &kp N2           &kp N3        &kp N4             &kp N5                                                    &kp N6           &kp N7              &kp N8            &kp N9             &kp N0               &kp BACKSLASH
&kp TILDE   &kp Q            &kp W            &kp E         &kp R              &kp T                                                     &kp Y            &kp U               &kp I             &kp O              &kp P                &kp MINUS
&caps_word  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LCTRL D  &hml LEFT_SHIFT F  &kp G                                                     &kp H            &hmr RIGHT_SHIFT J  &hmr RCTRL K      &hmr RIGHT_ALT L   &hmr RIGHT_GUI SEMI  &kp SQT
&kp LSHFT   &kp Z            &kp X            &kp C         &kp V              &kp B             &kp C_MUTE             &none            &kp N            &kp M               &kp COMMA         &kp DOT            &kp FSLH             &kp RSHFT
                             &kp LGUI         &kp DEL       &kp TAB            &tapmod 4 ESCAPE  &tapmod 1 BACKSPACE    &tapmod 2 ENTER  &tapmod 3 SPACE  &kp RCTRL           &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |   F9  |  F10  |     F11   |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9   |    0  |     F12   |
            // |       |BTCLR| BT1 | BT2  | BT3  | BT4  |                   | LEFT | DOWN  |  UP   | RIGHT |  INS  |PRINTSCREEN|
            // |       |     | HOME| PGUP | PGDN | END  |        |  |       | UNDO |  CUT  | COPY  | PASTE |  DEL  |    BKSP   |
            //               |     |      |      |      |        |  |       |      |       |       |       |

            bindings = <
&trans  &kp F1  &kp F2    &kp F3     &kp F4     &kp F5                     &kp F6      &kp F7     &kp F8      &kp F9       &kp F10  &kp F11
&trans  &kp N1  &kp N2    &kp N3     &kp N4     &kp N5                     &kp N6      &kp N7     &kp N8      &kp N9       &kp N0   &kp F12
&trans  &trans  &trans    &trans     &trans     &trans                     &kp LEFT    &kp DOWN   &kp UP      &kp RIGHT    &kp INS  &kp PSCRN
&trans  &trans  &kp HOME  &kp PG_UP  &kp PG_DN  &kp END  &trans    &trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp DEL  &kp BSPC
                &trans    &trans     &trans     &trans   &trans    &trans  &trans      &trans     &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |     |       |       |       |       |       |                |      |      |       |      |       |       |
            // |     |   !   |   @   |   #   |   $   |   %   |                |   ^  |  &   |   *   |   (  |   )   |       |
            // |     |RGB_TOG|RGB_HUI|RGB_SAI|RGB_BRI|       |                |   -  |   =  |   [   |   ]  |   \   | GRAVE |
            // |     |RGB_EFF|RGB_HUD|RGB_SAD|RGB_BRD|QK_BOOT|      |  |      |   _  |   +  |   {   |   }  |   |   |   ~   |
            //               |       |       |       |       |      |  |      |      |      |       |      |

            bindings = <
&trans  &trans    &trans  &trans    &trans    &trans                         &trans     &trans     &trans     &trans    &trans    &trans
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                      &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans  &trans    &trans  &trans    &trans    &trans                         &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &bootloader  &trans    &trans  &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                  &trans  &trans    &trans    &trans       &trans    &trans  &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        SYSTEM_LAYER {
            bindings = <
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                    &trans  &trans  &trans  &trans  &trans  &bt BT_CLR
&rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                  &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        NUMPAD {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans       &trans           &trans           &trans           &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp PERCENT  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp COLON  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp PLUS     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp ASTRK    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SLASH  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_N0    &trans           &trans           &trans
            >;
        };
    };
};
